class SteamRemote
{
public:
	virtual bool FileWrite(unsigned int, int, char const*, void const*, int);
	virtual void GetFileSize(unsigned int, int, char const*);
	virtual void FileWriteAsync(unsigned int, int, char const*, void *);
	virtual void FileReadAsync(unsigned int, int, char const*, unsigned int, unsigned int);
	virtual void FileReadAsyncComplete(unsigned int, unsigned long long, void *, unsigned int);
	virtual void FileRead(unsigned int, int, char const*, void *, int);
	virtual void FileForget(unsigned int, int, char const*);
	virtual void FileDelete(unsigned int, int, char const*);
	virtual unsigned long long FileShare(unsigned int, int, char const*);
	virtual void FileExists(unsigned int, int, char const*);
	virtual void FilePersisted(unsigned int, int, char const*);
	virtual void GetFileTimestamp(unsigned int, int, char const*);
	virtual void SetSyncPlatforms(unsigned int, int, char const*, int);
	virtual void GetSyncPlatforms(unsigned int, int, char const*);
	virtual void FileWriteStreamOpen(unsigned int, int, char const*);
	virtual void FileWriteStreamClose(unsigned long long);
	virtual void FileWriteStreamCancel(unsigned long long);
	virtual void FileWriteStreamWriteChunk(unsigned long long, void const*, int);
	virtual unsigned int GetFileCount(unsigned int, bool);
	virtual const char* GetFileNameAndSize(unsigned int, int, int *, int *, bool);
	virtual void GetQuota(unsigned int, unsigned long long *, unsigned long long *);
	virtual void IsCloudEnabledForAccount(void);
	virtual void IsCloudEnabledForApp(unsigned int);
	virtual void SetCloudEnabledForApp(unsigned int, bool);
	virtual void UGCDownload(unsigned long long, bool, unsigned int);
	virtual void UGCDownloadToLocation(unsigned long long, char const*, unsigned int);
	virtual void GetUGCDownloadProgress(unsigned long long, int *, int *);
	virtual void GetUGCDetails(unsigned long long, unsigned int *, char **, int *, int *);
	virtual void UGCRead(unsigned long long, void *, int, unsigned int, int);
	virtual void GetCachedUGCCount(void);
	virtual void GetCachedUGCHandle(int);
	virtual unsigned long long PublishFile(unsigned int, int, char const*, char const*, unsigned int, char const*, char const*, int, int const*, int);
	virtual void PublishVideo(unsigned int, int, char const*, char const*, int, char const*, unsigned int, char const*, char const*, int, int const*);
	virtual void PublishVideoFromURL(unsigned int, int, char const*, char const*, unsigned int, char const*, char const*, int, int const*);
	virtual unsigned long long CreatePublishedFileUpdateRequest(unsigned int, unsigned long long);
	virtual bool UpdatePublishedFileFile(unsigned long long, char const*);
	virtual void UpdatePublishedFilePreviewFile(unsigned long long, char const*);
	virtual bool UpdatePublishedFileTitle(unsigned long long, char const*);
	virtual void UpdatePublishedFileDescription(unsigned long long, char const*);
	virtual void UpdatePublishedFileSetChangeDescription(unsigned long long, char const*);
	virtual void UpdatePublishedFileVisibility(unsigned long long, int);
	virtual void UpdatePublishedFileTags(unsigned long long, int const*);
	virtual void UpdatePublishedFileURL(unsigned long long, char const*);
	virtual unsigned long long CommitPublishedFileUpdate(unsigned int, int, unsigned long long);
	virtual void GetPublishedFileDetails(unsigned long long, bool, unsigned int);
	virtual void DeletePublishedFile(unsigned long long);
	virtual void EnumerateUserPublishedFiles(unsigned int, unsigned int, int);
	virtual void SubscribePublishedFile(unsigned int, unsigned long long);
	virtual void EnumerateUserSubscribedFiles(unsigned int, unsigned int, unsigned char, int);
	virtual void UnsubscribePublishedFile(unsigned int, unsigned long long);
	virtual void SetUserPublishedFileAction(unsigned int, unsigned long long, int);
	virtual void EnumeratePublishedFilesByUserAction(unsigned int, int, unsigned int);
	virtual void EnumerateUserSubscribedFilesWithUpdates(unsigned int, unsigned int, unsigned int);
	virtual void GetCREItemVoteSummary(unsigned long long);
	virtual void UpdateUserPublishedItemVote(unsigned long long, bool);
	virtual void GetUserPublishedItemVoteDetails(unsigned long long);
	virtual void EnumerateUserSharedWorkshopFiles(unsigned int, int, unsigned int, int const*, int const*);
	virtual void EnumeratePublishedWorkshopFiles(unsigned int, int, int, unsigned int, unsigned int, unsigned int, int const*, int const*);
	virtual void EGetFileSyncState(unsigned int, int, char const*);
	virtual void BIsFileSyncing(unsigned int, int, char const*);
	virtual void FilePersist(unsigned int, int, char const*);
	virtual void FileFetch(unsigned int, int, char const*);
	virtual void ResolvePath(unsigned int, int, char const*, char *, unsigned int);
	virtual void FileTouch(unsigned int, int, char const*, bool);
	virtual void SetCloudEnabledForAccount(bool);
	virtual void LoadLocalFileInfoCache(unsigned int);
	virtual void EvaluateRemoteStorageSyncState(unsigned int, bool);
	virtual void GetRemoteStorageSyncState(unsigned int);
	virtual void HaveLatestFilesLocally(unsigned int);
	virtual void GetConflictingFileTimestamps(unsigned int, unsigned int *, unsigned int *);
	virtual void ResolveSyncConflict(unsigned int, bool);
	virtual void SynchronizeApp(unsigned int, bool, bool);
	virtual void IsAppSyncInProgress(unsigned int);
	virtual void RunAutoCloudOnAppLaunch(unsigned int);
	virtual void RunAutoCloudOnAppExit(unsigned int);
	virtual void ResetFileRequestState(unsigned int);
	virtual void ClearPublishFileUpdateRequests(unsigned int);
	virtual void GetSubscribedFileDownloadCount(void);
	virtual void BGetSubscribedFileDownloadInfo(int, unsigned long long *, unsigned int *, unsigned int *, unsigned int *);
	virtual void BGetSubscribedFileDownloadInfo(unsigned long long, unsigned int *, unsigned int *, unsigned int *);
	virtual void PauseSubscribedFileDownloadsForApp(unsigned int);
	virtual void ResumeSubscribedFileDownloadsForApp(unsigned int);
	virtual void PauseAllSubscribedFileDownloads(void);
	virtual void ResumeAllSubscribedFileDownloads(void);
};